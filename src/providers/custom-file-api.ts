import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';
import { BASE_PATH } from '../gen/bpClient/base';
import authProvider from './auth-provider';

/**
 *
 * customFileAPI
 * @export
 */
const customFileApi = () => ({
  /**
   *
   * (note-spec) uploadFile generated by swagger codegen doesn't work properly
   * @summary upload a file. fails if already exists
   * @param {ArrayBuffer} body
   * @param {string} aId
   * @param {string} id
   * @param {*} [options] Override http request option.
   */
  uploadFile: (body: ArrayBuffer, aId: string, id: string, options: AxiosRequestConfig = {}): Promise<AxiosResponse<Blob>> => {
    const url = `${BASE_PATH}/accounts/${aId}/files/logo.jpeg/raw`;
    const { accessToken } = authProvider.getCachedAuthConf();
    const headers = {
      'Content-Type': 'image/jpeg',
      Authorization: `Bearer ${accessToken}`,
    };
    return axios.post(url, body, { headers, ...options });
  },
  async getFileById(id: string) {
    throw new Error('Function not implemented.');
  },
});

export default customFileApi;
