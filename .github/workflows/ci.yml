name: CI
on: [push, pull_request, workflow_dispatch]

env:
  AWS_REGION: eu-west-3
  PROD_USERPOOL_ID: eu-west-3_FRKp6Y3Gx
  PROD_WEBCLIENT_ID: 1rof83p44k83l5lc8gfk6sbtam
  PROD_OAUTH_DOMAIN: bpartners.auth.eu-west-3.amazoncognito.com
  PROD_REDIRECT_SUCCESS: https://dashboard.bpartners.app/login/success
  PREPROD_USERPOOL_ID: eu-west-3_Fv8n7AfVo
  PREPROD_WEBCLIENT_ID: 4v0n3pk2j0b12m3aascud4us6h
  PREPROD_OAUTH_DOMAIN: preprod-bpartners-api.auth.eu-west-3.amazoncognito.com
  PREPROD_REDIRECT_SUCCESS: https://dashboard.preprod.bpartners.app/login/success

jobs:
  tests:
    env:
      REACT_APP_ANNOTATOR_GEO_CONVERTER_API_URL: https://tile-referencer.azurewebsites.net/api
      REACT_APP_ANNOTATOR_PIXEL_CONVERTER_API_URL: https://q1xs10we5d.execute-api.eu-west-3.amazonaws.com/Prod

    timeout-minutes: 35
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1.0.3
        with:
          version: 2
          verbose: false
          arch: amd64
          rootdir: ''
          workdir: ''
      - name: Connect to Bpartners Imagery AWS CodeArtifact
        run: |
          sh ./initAWS.sh imagery ${{ secrets.BPARTNERS_IMAGERY_AWS_ACCESS_KEY_ID }} ${{ secrets.BPARTNERS_IMAGERY_AWS_SECRET_ACCESS_KEY }} eu-west-3
          sh ./initNpmrc.sh imagery annotator-imagery-store npm-bpartners-imagery-app 205205101409
      - name: Connect to HEI AWS CodeArtifact
        run: |
          sh ./initAWS.sh hei ${{ secrets.HEI_AWS_ACCESS_KEY_ID }} ${{ secrets.HEI_AWS_SECRET_ACCESS_KEY }} ${{ secrets.HEI_AWS_REGION }}
          sh ./initNpmrc.sh hei hei-store npm-hei-school 088312068315
      - name: Connect to BPartners AWS CodeArtifact
        run: |
          sh ./initAWS.sh bpartners ${{ secrets.BPARTNERS_AWS_ACCESS_KEY_ID }} ${{ secrets.BPARTNERS_AWS_SECRET_ACCESS_KEY }} ${{ secrets.BPARTNERS_AWS_REGION }}
          sh ./initNpmrc.sh bpartners bpartners-store npm-bpartners-app 688605879718
      - run: npm install --legacy-peer-deps
      - name: Cypress dependencies
        # From: https://docs.cypress.io/guides/getting-started/installing-cypress#System-requirements, Ubuntu section
        run: |
          sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - run: |
          if ${{ github.ref_name == 'prod' }}; then
            REACT_APP_AWS_REGION=${{ env.AWS_REGION }} REACT_APP_USERPOOL_ID=${{ env.PROD_USERPOOL_ID }} REACT_APP_WEBCLIENT_ID=${{ env.PROD_WEBCLIENT_ID }} REACT_APP_OAUTH_DOMAIN=${{ env.PROD_OAUTH_DOMAIN }} REACT_APP_REDIRECT_SUCCESS=${{ env.PROD_REDIRECT_SUCCESS }} npm test
          else
            REACT_APP_AWS_REGION=${{ env.AWS_REGION }} REACT_APP_USERPOOL_ID=${{ env.PREPROD_USERPOOL_ID }} REACT_APP_WEBCLIENT_ID=${{ env.PREPROD_WEBCLIENT_ID }} REACT_APP_OAUTH_DOMAIN=${{ env.PREPROD_OAUTH_DOMAIN }} REACT_APP_REDIRECT_SUCCESS=${{ env.PREPROD_REDIRECT_SUCCESS }} npm test
          fi
      - name: Show test repports
        if: always()
        run: cat ./dist/test-reports.xml
      - name: Read version file
        id: read-version
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: version.yml
          version: version

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - run: npm install --location=global sonar-scanner
      - name: Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectVersion=${{ steps.read-version.outputs.version }} \
            -Dsonar.branch.name=${GITHUB_REF##*/}

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 17.x

      - run: rm package.json package-lock.json

      - run: |
          npm init -y
          npm install -d prettier prettier-plugin-organize-imports

      - run: npx prettier --write "src/**/*.{js,ts,tsx}" "./**/*.{json,yml,yaml}"
